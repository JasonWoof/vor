REQUIREMENTS

	vor requires the following libraries to build/run:
		sdl           http://www.libsdl.org/download-1.2.php
		sdl_mixer     http://www.libsdl.org/projects/SDL_mixer/
		sdl_image     http://www.libsdl.org/projects/SDL_image/

	If you are building from git, (or editing the graphics) you will also
	need:

		povray        http://www.povray.org/
		netpbm        http://netpbm.sourceforge.net/
		autoconf      version 2.63 or greater


BUILDING A RELEASE

	(see BUILDING FROM GIT if you don't have a release tarball)

	change to the source directory and run this:

	./configure && make

	Unless there are errors, you should be able to run the game from the
	source directory like this:

	./vor


BUILDING FROM GIT

	1) Make sure you have the extra dependencies first. If you want to avoid
	installing povray and/or netpbm, you can simply copy the data/ directory
	from a recent release.

	Run "autoconf".

	Continue as normal with the BUILDING A RELEASE section above.


BUILDING FOR WINDOWS

	Using mingw32 packages, you can use Linux to cross-compile a binary for
	Windows. Below is the recommended way to achieve this:

	1) Install Fedora 11, and get up to date with "yum upgrade"

	2) run as root: yum install mingw32-SDL_mixer mingw32-SDL_image

	3) change to the VoR source directory

	4) If you need to build the graphics (eg if you edited them, or if you're
	not using a release tarball) then run: ./configure && make graphics

	5) run: mingw32-configure && make

	6) make a directory with vor.exe, data/ and the following files from
	/usr/i686-pc-mingw32/sys-root/mingw/bin/: SDL.dll SDL_image.dll
	SDL_mixer.dll libjpeg-62.dll libpng12-0.dll zlib1.dll

	7) (optional) change to that directory, and test like so: wine ./vor.exe

	8) zip up that new directory and try it out on a Windows install.


RUNNING

	"./vor"

	After building you should have an executable called "vor" in the
	current (source) directory. You can run this here, "./vor"

INSTALLING

	You can run "make install" to install vor. If you're installing
	system-wide (for example, to the default install location of /usr/local)
	you'll need to run this as root.

	You can specify an alternative install location with the --prefix=
	argument to ./configure. See the output of: ./configure --help for more
	information.
